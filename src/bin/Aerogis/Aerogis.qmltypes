import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump Aerogis 1.0 /home/mugen/WorkProjects/buildExample/bin/'

Module {
    Component {
        name: "AerogisConfig"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["AerogisConfig 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "config"; type: "QDomElement"; isReadonly: true }
        Signal {
            name: "request_config"
            Parameter { name: "address"; type: "string" }
        }
        Signal {
            name: "earth_fileChanged"
            Parameter { name: "_earth_file"; type: "string" }
        }
        Signal {
            name: "request_earthChanged"
            Parameter { name: "_request_earth"; type: "bool" }
        }
        Signal {
            name: "earth_request_addressChanged"
            Parameter { name: "_earth_request_address"; type: "string" }
        }
        Signal {
            name: "display_modeChanged"
            Parameter { name: "_display_mode"; type: "string" }
        }
        Signal {
            name: "manual_mode_timeoutChanged"
            Parameter { name: "_manual_mode_timeout"; type: "int" }
        }
        Signal {
            name: "min_camera_altitude_manualChanged"
            Parameter { name: "_min_camera_altitude_manual"; type: "double" }
        }
        Signal {
            name: "max_camera_altitude_manualChanged"
            Parameter { name: "_max_camera_altitude_manual"; type: "double" }
        }
        Signal {
            name: "save_imagesChanged"
            Parameter { name: "_save_images"; type: "bool" }
        }
        Signal {
            name: "save_images_guiChanged"
            Parameter { name: "_save_images_gui"; type: "bool" }
        }
        Signal {
            name: "save_images_intervalChanged"
            Parameter { name: "_save_images_interval"; type: "int" }
        }
        Signal {
            name: "save_images_when_new_pointChanged"
            Parameter { name: "_save"; type: "bool" }
        }
        Signal {
            name: "save_images_stack_sizeChanged"
            Parameter { name: "_save_images_stack_size"; type: "double" }
        }
        Signal {
            name: "save_images_pathChanged"
            Parameter { name: "_save_images_path"; type: "string" }
        }
        Signal {
            name: "save_images_top"
            Parameter { name: "_low"; type: "int" }
            Parameter { name: "_med"; type: "int" }
            Parameter { name: "_hi"; type: "int" }
        }
        Signal {
            name: "languageChanged"
            Parameter { name: "_language"; type: "string" }
        }
        Signal {
            name: "request_flight_info_comChanged"
            Parameter { name: "_request_flight_info_com"; type: "bool" }
        }
        Signal {
            name: "request_flight_info_webChanged"
            Parameter { name: "_request_flight_info_web"; type: "bool" }
        }
        Signal {
            name: "request_flight_info_intervalChanged"
            Parameter { name: "_request_flight_info_interval"; type: "int" }
        }
        Signal {
            name: "request_flight_archiveChanged"
            Parameter { name: "_request_flight_archive"; type: "bool" }
        }
        Signal {
            name: "show_flight_infowindowChanged"
            Parameter { name: "_show_flight_infowindow"; type: "bool" }
        }
        Signal {
            name: "flight_infowindow_intervalChanged"
            Parameter { name: "_flight_infowindow_interval"; type: "int" }
        }
        Signal {
            name: "flight_infowindow_showtimeChanged"
            Parameter { name: "_flight_infowindow_showtime"; type: "int" }
        }
        Signal {
            name: "show_object_infowindowChanged"
            Parameter { name: "_show_object_infowindow"; type: "bool" }
        }
        Signal {
            name: "object_infowindow_intervalChanged"
            Parameter { name: "_object_infowindow_interval"; type: "int" }
        }
        Signal {
            name: "object_infowindow_showtimeChanged"
            Parameter { name: "_object_infowindow_showtime"; type: "int" }
        }
        Signal {
            name: "infowindow_header_fontChanged"
            Parameter { name: "_infowindow_header_font"; type: "string" }
        }
        Signal {
            name: "infowindow_header_font_sizeChanged"
            Parameter { name: "_infowindow_header_font_size"; type: "int" }
        }
        Signal {
            name: "infowindow_body_fontChanged"
            Parameter { name: "_infowindow_body_font"; type: "string" }
        }
        Signal {
            name: "infowindow_body_font_sizeChanged"
            Parameter { name: "_infowindow_body_font_size"; type: "int" }
        }
        Signal {
            name: "max_object_distanceChanged"
            Parameter { name: "_max_object_distance"; type: "double" }
        }
        Signal {
            name: "objects_features_nameChanged"
            Parameter { name: "_objects_features_name"; type: "string" }
        }
        Signal {
            name: "objects_photo_dirChanged"
            Parameter { name: "_objects_photo_dir"; type: "string" }
        }
        Signal {
            name: "objects_text_dirChanged"
            Parameter { name: "_objects_text_dir"; type: "string" }
        }
        Signal {
            name: "com_portChanged"
            Parameter { name: "_com_port"; type: "string" }
        }
        Signal {
            name: "web_addressChanged"
            Parameter { name: "_web_address"; type: "string" }
        }
        Signal {
            name: "config_request_addressChanged"
            Parameter { name: "_config_request_address"; type: "string" }
        }
        Signal {
            name: "flight_archive_request_addressChanged"
            Parameter { name: "_flight_archive_request_address"; type: "string" }
        }
        Signal {
            name: "model_pathChanged"
            Parameter { name: "_model_path"; type: "string" }
        }
        Signal {
            name: "trace_colorChanged"
            Parameter { name: "_trace_color"; type: "string" }
        }
        Signal {
            name: "fixed_flight_heightChanged"
            Parameter { name: "_fixed_flight_height"; type: "int" }
        }
        Signal {
            name: "log_pathChanged"
            Parameter { name: "_log_path"; type: "string" }
        }
        Signal {
            name: "infowindow_bgcolorChanged"
            Parameter { name: "_infowindow_bgcolor"; type: "string" }
        }
        Signal {
            name: "infowindow_textcolorChanged"
            Parameter { name: "_infowindow_textcolor"; type: "string" }
        }
        Signal { name: "configLoaded" }
        Method {
            name: "loadConfig"
            Parameter { name: "confName"; type: "string" }
            Parameter { name: "mayRequestFromWeb"; type: "bool" }
        }
        Method {
            name: "loadTextConfig"
            Parameter { name: "confText"; type: "string" }
            Parameter { name: "mayRequestFromWeb"; type: "bool" }
        }
    }
    Component {
        name: "AerogisCore"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["AerogisCore 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "logFileName"; type: "string" }
        Method {
            name: "log"
            Parameter { name: "s"; type: "string" }
        }
        Method {
            name: "setGuiLanguage"
            Parameter { name: "la"; type: "string" }
        }
    }
    Component {
        name: "EarthWidget"
        defaultProperty: "data"
        prototype: "osgQtQuick::OSGViewport"
        exports: ["EarthWidget 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "earth_file"; type: "string" }
        Property { name: "request_earth"; type: "bool" }
        Property { name: "earth_request_address"; type: "string" }
        Property { name: "display_mode"; type: "string" }
        Property { name: "manual_mode_timeout"; type: "int" }
        Property { name: "min_camera_altitude_manual"; type: "double" }
        Property { name: "max_camera_altitude_manual"; type: "double" }
        Property { name: "save_images_stack_size"; type: "double" }
        Property { name: "needTakeScreenshot"; type: "bool" }
        Property { name: "needTake3Screenshots"; type: "bool" }
        Property { name: "needTakeGUIScreenshot"; type: "bool" }
        Property { name: "needTakeTopScreenshots"; type: "bool" }
        Property { name: "save_images_path"; type: "string" }
        Property { name: "language"; type: "string" }
        Property { name: "request_flight_info_com"; type: "bool" }
        Property { name: "com_port"; type: "string" }
        Property { name: "request_flight_info_web"; type: "bool" }
        Property { name: "web_address"; type: "string" }
        Property { name: "request_flight_archive"; type: "bool" }
        Property { name: "flight_archive_request_address"; type: "string" }
        Property { name: "flight_infowindow_interval"; type: "int" }
        Property { name: "flight_infowindow_showtime"; type: "int" }
        Property { name: "max_object_distance"; type: "double" }
        Property { name: "objects_features_name"; type: "string" }
        Property { name: "objects_photo_dir"; type: "string" }
        Property { name: "objects_text_dir"; type: "string" }
        Property { name: "model_path"; type: "string" }
        Property { name: "trace_color"; type: "string" }
        Property { name: "fixed_flight_height"; type: "int" }
        Signal { name: "needAirplaneModel" }
        Signal {
            name: "error"
            Parameter { name: "msg"; type: "string" }
        }
        Signal {
            name: "newObjectInfo"
            Parameter { name: "objCaption"; type: "string" }
            Parameter { name: "objDescr"; type: "string" }
            Parameter { name: "objImgFile"; type: "string" }
        }
        Signal {
            name: "newFlightInfo"
            Parameter { name: "Lng"; type: "double" }
            Parameter { name: "Lat"; type: "double" }
            Parameter { name: "Alt"; type: "double" }
            Parameter { name: "MoscowDateTime"; type: "QDateTime" }
            Parameter { name: "TimeToDest"; type: "string" }
            Parameter { name: "KmToDest"; type: "double" }
            Parameter { name: "Temp"; type: "double" }
            Parameter { name: "Speed"; type: "double" }
        }
        Signal { name: "moveAirplaneAnimationDone" }
        Method {
            name: "setNewCoordinatesOnScene"
            Parameter { name: "lon"; type: "double" }
            Parameter { name: "lat"; type: "double" }
            Parameter { name: "alt"; type: "double" }
        }
        Method {
            name: "setNewCoordinatesOnScene"
            Parameter { name: "lon"; type: "double" }
            Parameter { name: "lat"; type: "double" }
            Parameter { name: "alt"; type: "double" }
            Parameter { name: "azim"; type: "double" }
        }
        Method {
            name: "setArchivePath"
            Parameter { name: "ar"; type: "QVariantList" }
        }
        Method {
            name: "moveTo"
            Parameter { name: "lon"; type: "double" }
            Parameter { name: "lat"; type: "double" }
            Parameter { name: "alt"; type: "double" }
            Parameter { name: "move_time_ms"; type: "int" }
        }
        Method {
            name: "moveCameraTo"
            Parameter { name: "hat"; type: "double" }
            Parameter { name: "rad"; type: "double" }
            Parameter { name: "move_time_ms"; type: "int" }
        }
        Method { name: "searchForNearbyObject" }
        Method { name: "requestFlightInfo" }
        Method {
            name: "setLanguageOnMap"
            Parameter { name: "la"; type: "string" }
            Parameter { name: "laOld"; type: "string" }
        }
        Method {
            name: "setSave_images_top"
            Parameter { name: "low"; type: "int" }
            Parameter { name: "med"; type: "int" }
            Parameter { name: "hi"; type: "int" }
        }
        Method { name: "pCamera" }
        Method { name: "mCamera" }
        Method { name: "onConfigLoaded" }
        Method {
            name: "request_config"
            type: "string"
            Parameter { name: "address"; type: "string" }
        }
    }
    Component {
        name: "osgQtQuick::OSGGroup"
        defaultProperty: "child"
        prototype: "osgQtQuick::OSGNode"
        exports: ["OSGGroup 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "child"; type: "osgQtQuick::OSGNode"; isList: true; isReadonly: true }
    }
    Component {
        name: "osgQtQuick::OSGNode"
        prototype: "QObject"
        exports: ["OSGNode 1.0"]
        exportMetaObjectRevisions: [0]
        Signal {
            name: "nodeChanged"
            Parameter { name: "node"; type: "osg::Node"; isPointer: true }
        }
    }
    Component {
        name: "osgQtQuick::OSGNodeFile"
        prototype: "osgQtQuick::OSGNode"
        exports: ["OSGNodeFile 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "source"; type: "QUrl" }
        Signal {
            name: "sourceChanged"
            Parameter { name: "url"; type: "QUrl" }
        }
    }
    Component {
        name: "osgQtQuick::OSGViewport"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["OSGViewport 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "DrawingMode"
            values: {
                "Native": 0,
                "Buffer": 1
            }
        }
        Property { name: "color"; type: "QColor" }
        Property { name: "mode"; type: "DrawingMode" }
        Signal {
            name: "colorChanged"
            Parameter { name: "color"; type: "QColor" }
        }
        Signal {
            name: "modeChanged"
            Parameter { name: "mode"; type: "DrawingMode" }
        }
        Signal { name: "frameEventsProcessed" }
        Signal {
            name: "frameDrawn"
            Parameter { name: "fb"; type: "QOpenGLFramebufferObject"; isPointer: true }
        }
        Method {
            name: "viewerDrawsFrame"
            Parameter { name: "v"; type: "AerogisViewer"; isPointer: true }
        }
        Method { name: "viewerDrawnFrame" }
        Method { name: "myplusCamera" }
        Method { name: "myminusCamera" }
    }
}
